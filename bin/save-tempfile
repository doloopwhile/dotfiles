#!/usr/bin/env python
from __future__ import print_function
from argparse import ArgumentParser
from subprocess import call
import fileinput
import pipes
import sys
import tempfile
import os.path


description = 'Save inputs to temporary file and print name of the temporary file'
parser = ArgumentParser(description=description)
parser.add_argument('FILES', action='store', nargs='*')
parser.add_argument(
    '--suffix', action='store', default='',
    help='Suffix of name of temporary file')
parser.add_argument(
    '--prefix', action='store', default='tmp',
    help='Prefix of name of temporary file')
parser.add_argument(
    '--dir', '-d', action='store', default=tempfile.gettempdir(),
    help='Dir in which temporary created')
parser.add_argument(
    '--command', '-c', action='store', default=None,
    help='Command to open temporary file after creating it')
parser.add_argument(
    '--abort-if-empty', action='store_true',
    help='Abort if input is empty')

opts = parser.parse_args()
kw = dict()
for k in 'suffix prefix dir'.split():
    kw[k] = getattr(opts, k)

wrote = False
with tempfile.NamedTemporaryFile('w', delete=False, **kw) as fp:
    for line in fileinput.input(opts.FILES):
        wrote = True
        fp.write(line)
    fp.flush()

if opts.abort_if_empty and not wrote:
    print('{}: no input'.format(os.path.basename(sys.argv[0])), file=sys.stderr)
    sys.exit(1)

print(fp.name)

if opts.command is not None:
    call(opts.command + " " + pipes.quote(fp.name), shell=True)
